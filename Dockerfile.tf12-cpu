FROM ubuntu:18.04

# This image only used by build TensorFlow wheel file.

LABEL author="TinyMind" website="www.tinymind.com" email="hello@tinymind.com"

RUN apt update && apt install -y --no-install-recommends \
        build-essential \
        cmake \
        g++ \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libpng-dev \
        libzmq3-dev \
        pkg-config \
        rsync \
        software-properties-common \
        unzip \
        zip \
        zlib1g-dev \
        curl \
        wget \
        git \
        swig \
        python3 \
        python3-dev && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    wget https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py

RUN pip --no-cache-dir install --upgrade \
        Pillow \
        h5py \
        ipykernel \
        jupyter \
        keras_applications \
        keras_preprocessing \
        matplotlib \
        mock \
        numpy \
        scipy \
        scikit-learn \
        pandas \
        mkl \
        pyyaml \
        enum34 \
        tinyenv

# MKL support.
RUN git clone --depth=1 https://github.com/intel/mkl-dnn.git && \
    cd mkl-dnn/scripts && ./prepare_mkl.sh && cd .. && \
    mkdir -p build && cd build && cmake .. && make && \
    make install

# Install bazel
ENV BAZEL_VERSION=0.15.0
RUN mkdir /bazel && \
    wget -O /bazel/installer.sh \
    "https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh" && \
    chmod +x /bazel/installer.sh && \
    /bazel/installer.sh && \
    rm -f /bazel/installer.sh

ENV TENSORFLOW_VERSION=1.12.0
RUN wget -O tensorflow.tar.gz https://github.com/tensorflow/tensorflow/archive/v"$TENSORFLOW_VERSION".tar.gz && \
    tar -zxf tensorflow.tar.gz && \
    rm tensorflow.tar.gz && \
    mv /tensorflow-"$TENSORFLOW_VERSION" /tensorflow 

WORKDIR /tensorflow

# Configure the build for our configuration.
ENV CI_BUILD_PYTHON=python
ENV PYTHON_BIN_PATH="/usr/bin/python"
ENV PYTHON_LIB_PATH="/usr/local/lib/python3.6/dist-packages"
ENV TF_NEED_JEMALLOC="1"
ENV TF_NEED_KAFKA=0
ENV TF_NEED_GCP="0"
ENV TF_NEED_AWS="0"
ENV TF_NEED_HDFS="0"
ENV TF_ENABLE_XLA=0
ENV TF_NEED_GDR="0"
ENV TF_NEED_VERBS="0"
ENV TF_NEED_OPENCL_SYCL=0
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
ENV TF_NEED_CUDA="0"
ENV TF_NEED_MPI=0
ENV TF_NEED_NGRAPH=0
ENV GCC_HOST_COMPILER_PATH="/usr/bin/gcc"
ENV TF_DOWNLOAD_CLANG="0"
ENV TF_NEED_IGNITE="1"
ENV TF_NEED_ROCM="0"
ENV TF_SET_ANDROID_WORKSPACE="0"
ENV CC_OPT_FLAGS="-march=native"

RUN ./configure && \
    bazel build -c opt --config=mkl --copt=-mavx2 --copt=-mfma --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" \
        tensorflow/tools/pip_package:build_pip_package && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /root/pip && \
    pip --no-cache-dir install --upgrade /root/pip/tensorflow-*.whl && \
    rm -rf /root/.cache
# Clean up pip wheel and Bazel cache when done.


WORKDIR /root

# TensorBoard
EXPOSE 6006
# IPython
EXPOSE 8888